---
description: "Rules for Playwright best practices"
globs: "*.spec.ts,*.spec.js"
alwaysApply: false
---

<rule>
  <meta>
    <title>Playwright Best Practices</title>
    <description>A rule to enforce best practices for writing end-to-end tests with Playwright.</description>
    <created-at utc-timestamp="1744326000">April 11, 2025, 11:00 AM AEST</created-at>
    <last-updated-at utc-timestamp="1744326000">April 11, 2025, 11:00 AM AEST</last-updated-at>
    <applies-to>
      <file-matcher glob="*.spec.ts,*.spec.js">All Playwright test files</file-matcher>
      <action-matcher action="code-commit">Triggered when committing code changes</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="high">
        <description>Focus tests on user-visible behavior rather than internal implementation details.</description>
    </requirement>
    <requirement priority="critical">
        <description>Prefer stable, user-facing selectors like `getByRole` or `getByTestId` over brittle selectors like XPath or highly specific CSS classnames.</description>
    </requirement>
    <requirement priority="high">
        <description>Use the Page Object Model (POM) to create reusable and maintainable tests by encapsulating UI elements and interactions into page-specific classes.</description>
    </requirement>
    <requirement priority="high">
        <description>Leverage Playwrights auto-waiting capabilities and web-first assertions (`expect`) to write stable and non-flaky tests.</description>
    </requirement>
    <requirement priority="medium">
        <description>Run tests in parallel to significantly reduce execution time, and use fixtures to manage test setup and teardown.</description>
    </requirement>
    <requirement priority="high">
        <description>Isolate tests from each other and from third-party dependencies by mocking external services and APIs using Playwrights built-in routing capabilities.</description>
    </requirement>
    <requirement priority="critical">
        <description>Never expose sensitive data like passwords or API keys in test code. Use environment variables or a secrets management solution.</description>
    </requirement>
     <requirement priority="high">
        <description>Integrate Playwright tests into your CI/CD pipeline to automate testing and catch regressions before they reach production.</description>
    </requirement>
    <requirement priority="medium">
        <description>Use Playwright Inspector and trace viewer for debugging tests visually and stepping through test execution.</description>
    </requirement>
  </requirements>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
  </references>
</rule>
